name: build_x64_asan

on:
  workflow_dispatch:  # Allow manual triggering
  push:
    branches:
      - main
      - snnn/es1
      - 'rel-*' # Trigger on releases branches
  pull_request:
    branches:
      - main 

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_x64_asan:
    runs-on: ["self-hosted", "1ES.Pool=onnxruntime-github-vs2022-mms"]  # Use the specified self-hosted runner
    timeout-minutes: 300

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: false

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        architecture: x64

    - name: Locate vcvarsall via vswhere
      id: locate-vcvarsall
      shell: cmd
      run: |
        @echo off
        set vswherepath="%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe"
        for /f "usebackq delims=" %%i in (`%vswherepath% -latest -property installationPath`) do (
          if exist "%%i\VC\Auxiliary\Build\vcvars64.bat" (
            set vcvarsall="%%i\VC\Auxiliary\Build\vcvars64.bat"
          )
        )

        echo "vcvarsall will be used as the VC compiler: %vcvarsall%"
        echo "vcvarsall=%vcvarsall%" >> $GITHUB_ENV

    - name: Build and Test (Combined)
      shell: cmd  # Use cmd for the initial environment setup
      run: |
        @echo off
        call "%vcvarsall%"

        REM Create build directory.  Important to do this *before* changing directory.
        if not exist "%GITHUB_WORKSPACE%\build" mkdir "%GITHUB_WORKSPACE%\build"
        cd "%GITHUB_WORKSPACE%\build"

        REM Install Python modules *after* setting up the VC environment
        python -m pip install -r "%GITHUB_WORKSPACE%\tools\ci_build\github\windows\python\requirements.txt"

        REM Execute the build script, also within the VC environment.
        python "%GITHUB_WORKSPACE%\tools\ci_build\build.py" --config Debug --build_dir "%GITHUB_WORKSPACE%\build" --skip_submodule_sync --parallel --use_vcpkg --use_vcpkg_ms_internal_asset_cache --cmake_generator "Visual Studio 17 2022" --disable_memleak_checker --enable_address_sanitizer

      env:
        vcvarsall: ${{ env.vcvarsall }} # Pass vcvarsall path to this combined step