parameters:
  AgentPool : 'Win-CPU'

stages:
- stage: NuGet_Test_Android
  dependsOn:
  - NuGet_Packaging_CPU
  condition: succeeded()
  jobs:
    - job:  NuGet_Test_Android
      clean: all
      pool: "${{ parameters.AgentPool }}"

      steps:
        - task: NuGetToolInstaller@0
          displayName: Use Nuget 6.10.x
          inputs:
            versionSpec: 6.10.x

        - template: ../../templates/flex-downloadPipelineArtifact.yml
          parameters:
            StepName: 'Download Pipeline Artifact'
            ArtifactName: drop-signed-nuget-${{ parameters.ArtifactSuffix }}
            TargetPath: '$(Build.BinariesDirectory)\nuget-artifact'
            SpecificArtifact: ${{ parameters.SpecificArtifact }}
            BuildId: ${{ parameters.BuildId }}

        - template: get-nuget-package-version-as-variable.yml
          parameters:
            packageFolder: '$(Build.BinariesDirectory)\nuget-artifact'

        - task: PowerShell@2
          displayName: Install MAUI workloads
          inputs:
            targetType: 'inline'
            script: |
              dotnet workload install maui maui-android android
            workingDirectory: '$(Build.SourcesDirectory)\csharp'

        - task: PowerShell@2
          displayName: Publish Android MAUI APK
          inputs:
            targetType: 'inline'
            script: |
              dotnet nuget add source $(Build.BinariesDirectory)\nuget-artifact --name local-nuget
              dotnet publish -c Release --property:UsePrebuiltNativePackage=true --property:CurrentOnnxRuntimeVersion=$(NuGetPackageVersionNumber)
            workingDirectory: '$(Build.SourcesDirectory)\csharp\test\Microsoft.ML.OnnxRuntime.Tests.MAUI'

        - task: CopyFiles@2
          displayName: 'Copy apk to staging directory'
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)\csharp\test\Microsoft.ML.OnnxRuntime.Tests.MAUI\bin\Release\net8.0-android\publish'
            Contents: '*-Signed.apk'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

        - task: PublishPipelineArtifact@0
          displayName: 'Publish apk packages files'
          inputs:
            artifactName: 'test signed apk'
            targetPath: '$(Build.ArtifactStagingDirectory)'
