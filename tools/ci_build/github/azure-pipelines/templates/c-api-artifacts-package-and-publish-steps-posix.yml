# sets up common build tools for the windows build machines before build

parameters:
- name: buildConfig
  type: string
  default: 'Release'

- name: artifactName
  type: string
  default: 'onnxruntime-linux-x64'

- name: artifactNameNoVersionString
  type: string
  default: 'onnxruntime-linux-x64'

- name: libraryName
  type: string
  default: 'libonnxruntime.so'
- name: is1ES
  type: boolean
  default: false

steps:
- task: ShellScript@2
  displayName: 'Copy build artifacts for zipping'
  inputs:
    scriptPath: 'tools/ci_build/github/linux/copy_strip_binary.sh'
    args: '-r $(Build.BinariesDirectory) -a ${{parameters.artifactName}} -l ${{parameters.libraryName}} -c ${{parameters.buildConfig}} -s $(Build.SourcesDirectory) -t $(Build.SourceVersion)'
    workingDirectory: '$(Build.BinariesDirectory)/${{parameters.buildConfig}}'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)/${{parameters.artifactName}}'
    includeRootFolder: true
    archiveType: 'tar' # Options: zip, 7z, tar, wim
    tarCompression: 'gz'
    archiveFile: '$(Build.ArtifactStagingDirectory)/${{parameters.artifactName}}.tgz'
    replaceExistingArchive: true
- ${{ if eq(parameters.is1ES, true) }}:
  - task: 1ES.PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifactName: '${{parameters.artifactNameNoVersionString}}'
- ${{ if eq(parameters.is1ES, false) }}:
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: '${{parameters.artifactNameNoVersionString}}'
